/*
 Navicat Premium Data Transfer

 Source Server         : localhost
 Source Server Type    : MySQL
 Source Server Version : 50741 (5.7.41-log)
 Source Host           : localhost:3306
 Source Schema         : nacos

 Target Server Type    : MySQL
 Target Server Version : 50741 (5.7.41-log)
 File Encoding         : 65001

 Date: 12/04/2025 01:36:49
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `encrypted_data_key` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 72 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (1, 'nacos-config-example.properties', 'DEFAULT_GROUP', 'spring.cloud.nacos.config.serverAddr=127.0.0.1:8848\nspring.cloud.nacos.config.prefix=PREFIX\nspring.cloud.nacos.config.group=GROUP\nspring.cloud.nacos.config.namespace=NAMESPACE', '3197676055169b02547a13071310c6a5', '2024-03-14 21:05:14', '2024-03-14 21:05:14', 'nacos', '127.0.0.1', '', '', NULL, NULL, NULL, 'text', NULL, '');
INSERT INTO `config_info` VALUES (10, 'seata.properties', 'SEATA_GROUP', '#For details about configuration items, see https://seata.io/zh-cn/docs/user/configurations.html\n#Transport configuration, for client and server\ntransport.type=TCP\ntransport.server=NIO\ntransport.heartbeat=true\ntransport.enableTmClientBatchSendRequest=false\ntransport.enableRmClientBatchSendRequest=true\ntransport.enableTcServerBatchSendResponse=false\ntransport.rpcRmRequestTimeout=30000\ntransport.rpcTmRequestTimeout=30000\ntransport.rpcTcRequestTimeout=30000\ntransport.threadFactory.bossThreadPrefix=NettyBoss\ntransport.threadFactory.workerThreadPrefix=NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler\ntransport.threadFactory.shareBossWorker=false\ntransport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize=1\ntransport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize=1\ntransport.threadFactory.workerThreadSize=default\ntransport.shutdown.wait=3\ntransport.serialization=seata\ntransport.compressor=none\n\n#Transaction routing rules configuration, only for the client\nservice.vgroupMapping.default_tx_group=default\n#If you use a registry, you can ignore it\nservice.default.grouplist=127.0.0.1:8091\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\n\n#Transaction rule configuration, only for the client\nclient.rm.asyncCommitBufferLimit=10000\nclient.rm.lock.retryInterval=10\nclient.rm.lock.retryTimes=30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict=true\nclient.rm.reportRetryCount=5\nclient.rm.tableMetaCheckEnable=true\nclient.rm.tableMetaCheckerInterval=60000\nclient.rm.sqlParserType=druid\nclient.rm.reportSuccessEnable=false\nclient.rm.sagaBranchRegisterEnable=false\nclient.rm.sagaJsonParser=fastjson\nclient.rm.tccActionInterceptorOrder=-2147482648\nclient.tm.commitRetryCount=5\nclient.tm.rollbackRetryCount=5\nclient.tm.defaultGlobalTransactionTimeout=60000\nclient.tm.degradeCheck=false\nclient.tm.degradeCheckAllowTimes=10\nclient.tm.degradeCheckPeriod=2000\nclient.tm.interceptorOrder=-2147482648\nclient.undo.dataValidation=true\nclient.undo.logSerialization=jackson\nclient.undo.onlyCareUpdateColumns=true\nserver.undo.logSaveDays=7\nserver.undo.logDeletePeriod=86400000\nclient.undo.logTable=undo_log\nclient.undo.compress.enable=true\nclient.undo.compress.type=zip\nclient.undo.compress.threshold=64k\n#For TCC transaction mode\ntcc.fence.logTableName=tcc_fence_log\ntcc.fence.cleanPeriod=1h\n\n#Log rule configuration, for client and server\nlog.exceptionRate=100\n\n#Transaction storage configuration, only for the server. The file, DB, and redis configuration values are optional.\nstore.mode=db\nstore.lock.mode=db\nstore.session.mode=db\n#Used for password encryption\nstore.publicKey=\n\n#If `store.mode,store.lock.mode,store.session.mode` are not equal to `file`, you can remove the configuration block.\n#store.file.dir=file_store/data\n#store.file.maxBranchSessionSize=16384\n#store.file.maxGlobalSessionSize=512\n#store.file.fileWriteBufferCacheSize=16384\n#store.file.flushDiskMode=async\n#store.file.sessionReloadReadSize=100\n\n#These configurations are required if the `store mode` is `db`. If `store.mode,store.lock.mode,store.session.mode` are not equal to `db`, you can remove the configuration block.\nstore.db.datasource=druid\nstore.db.dbType=mysql\nstore.db.driverClassName=com.mysql.jdbc.Driver\nstore.db.url=jdbc:mysql://localhost:3306/seata?useUnicode=true&rewriteBatchedStatements=true&useSSL=false\nstore.db.user=root\nstore.db.password=root\nstore.db.minConn=5\nstore.db.maxConn=30\nstore.db.globalTable=global_table\nstore.db.branchTable=branch_table\nstore.db.distributedLockTable=distributed_lock\nstore.db.queryLimit=100\nstore.db.lockTable=lock_table\nstore.db.maxWait=5000\n\n#These configurations are required if the `store mode` is `redis`. If `store.mode,store.lock.mode,store.session.mode` are not equal to `redis`, you can remove the configuration block.\n#store.redis.mode=single\n#store.redis.single.host=127.0.0.1\n#store.redis.single.port=6379\n#store.redis.sentinel.masterName=\n#store.redis.sentinel.sentinelHosts=\n#store.redis.sentinel.sentinelPassword=\n#store.redis.maxConn=10\n#store.redis.minConn=1\n#store.redis.maxTotal=100\n#store.redis.database=0\n#store.redis.password=\n#store.redis.queryLimit=100\n\n#Transaction rule configuration, only for the server\nserver.recovery.committingRetryPeriod=1000\nserver.recovery.asynCommittingRetryPeriod=1000\nserver.recovery.rollbackingRetryPeriod=1000\nserver.recovery.timeoutRetryPeriod=1000\nserver.maxCommitRetryTimeout=-1\nserver.maxRollbackRetryTimeout=-1\nserver.rollbackRetryTimeoutUnlockEnable=false\nserver.distributedLockExpireTime=10000\nserver.xaerNotaRetryTimeout=60000\nserver.session.branchAsyncQueueSize=5000\nserver.session.enableBranchAsyncRemove=false\nserver.enableParallelRequestHandle=false\n\n#Metrics configuration, only for the server\nmetrics.enabled=false\nmetrics.registryType=compact\nmetrics.exporterList=prometheus\nmetrics.exporterPrometheusPort=9898\n\nservice.vgroupMapping.info-service-tx-group=default\nservice.vgroupMapping.purchase-service-tx-group=default\nservice.vgroupMapping.warehouse-service-tx-group=default\nservice.vgroupMapping.sale-service-tx-group=default', '87a1693493d83c5ac2a9d55207305cb6', '2024-03-17 13:08:57', '2024-03-21 08:45:56', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'properties', '', '');
INSERT INTO `config_info` VALUES (27, 'sentinel-circuitbreaker-rules.yml', 'DEFAULT_GROUP', '#\r\n# Copyright 2013-2023 the original author or authors.\r\n#\r\n# Licensed under the Apache License, Version 2.0 (the \"License\");\r\n# you may not use this file except in compliance with the License.\r\n# You may obtain a copy of the License at\r\n#\r\n#      https://www.apache.org/licenses/LICENSE-2.0\r\n#\r\n# Unless required by applicable law or agreed to in writing, software\r\n# distributed under the License is distributed on an \"AS IS\" BASIS,\r\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n# See the License for the specific language governing permissions and\r\n# limitations under the License.\r\n#\r\n\r\nfeign:\r\n  circuitbreaker:\r\n    enabled: true\r\n  sentinel:\r\n    default-rule: default\r\n    rules:\r\n      # global feign client\r\n      default:\r\n        - grade: 2\r\n          count: 1\r\n          timeWindow: 15\r\n          statIntervalMs: 1000\r\n          minRequestAmount: 1\r\n      # specific feign client\r\n      user:\r\n        - grade: 2\r\n          count: 1\r\n          timeWindow: 15\r\n          statIntervalMs: 1000\r\n          minRequestAmount: 1\r\n      # specific feign client single method\r\n      \"[user#feignMethod(boolean)]\":\r\n        - grade: 2\r\n          count: 1\r\n          timeWindow: 10\r\n          statIntervalMs: 1000\r\n          minRequestAmount: 1\r\n', '55e47d710f7572ec83b1a08c482f7eae', '2024-03-18 22:36:03', '2024-03-18 22:36:03', 'nacos', '0:0:0:0:0:0:0:1', '', '', NULL, NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (36, 'vector-common.yaml', 'DEFAULT_GROUP', 'mysql:\n  host: localhost\n  port: 3306\n  username: root\n  password: root\n\nredis:\n  host: 192.168.0.250\n  port: 6379\n  password: 123456\n\nrabbitmq:\n  host: 192.168.0.250\n  port: 5672\n  username: guest\n  password: guest\n\n# 验签公钥地址\nspring:\n  security:\n    oauth2:\n      authorizationserver:\n        token-uri: ${gateway.endpoint}/vector-auth/oauth2/token\n      resourceserver:\n        jwt: \n          jwk-set-uri: ${gateway.endpoint}/vector-auth/oauth2/jwks\n\n# 网关地址\ngateway:\n  endpoint: http://localhost:8080\n\n# 短信模版代码\nsms:\n  aliyun:\n    template-code:\n      login: SMS_12345678', '4e677060f06256bbb119ab01f626ec32', '2025-03-26 08:11:24', '2025-04-01 17:27:37', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (38, 'vector-system.yaml', 'DEFAULT_GROUP', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_system?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', 'a17663bf4c27fc933c138563bc77631a', '2025-03-26 08:31:02', '2025-04-03 08:33:06', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (41, 'vector-auth.yaml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_oauth2_server?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n  cache:\n    # 缓存类型 redis、none(不使用缓存) \n    type: redis\n    # 缓存时间(单位：ms)\n    redis:\n      time-to-live: 3600000\n      # 缓存null值，防止缓存穿透\n      cache-null-values: true\n  cloud:\n    openfeign:\n      circuitbreaker:\n        enabled: true\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n', 'b33df02fb55c1648f3650eeede9ee5ec', '2025-03-26 09:37:28', '2025-03-26 09:46:21', 'nacos', '127.0.0.1', '', '', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (50, 'vector-gateway.yaml', 'DEFAULT_GROUP', 'spring:\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          enabled: true\n      routes:\n        - id: auth_route\n          uri: lb://vector-auth\n          predicates:\n            - Path=/auth/**,/oauth2/**\n          filters:\n#            - RewritePath=/auth/(?<segment>.*),/$\\{segment}\n            # - StripPrefix=1 # 跟上面方式效果一样\n\n        - id: system_route\n          uri: lb://vector-system\n          predicates:\n            - Path=/sys/**\n\n        - id: third_route\n          uri: lb://vector-third\n          predicates:\n            - Path=/third/**\n\n        - id: app_route\n          uri: lb://vector-app\n          predicates:\n            - Path=/app/**\n\n        - id: gen_route\n          uri: lb://vector-code-generation\n          predicates:\n            - Path=/gen/**\n\n        - id: product_route\n          uri: lb://biz-product\n          predicates:\n            - Path=/pms/**\n\n        - id: supply_route\n          uri: lb://biz-supply\n          predicates:\n            - Path=/scm/**\n\n        - id: warehouse_route\n          uri: lb://biz-warehouse\n          predicates:\n            - Path=/wms/**\n', '9880097b68f5787df440228d6de3ace3', '2025-03-26 21:33:10', '2025-04-11 13:51:27', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (56, 'vector-third.yaml', 'DEFAULT_GROUP', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_third?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/third/sms/send\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:18300\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式\n    custom-domain:\n\nsms:\n  # 短信类型 (目前支持aliyun)\n  type: aliyun\n  # 阿里云短信服务\n  aliyun:\n    # 阿里云服务的区域ID\n    region-id: cn-hangzhou\n    # 阿里云短信服务API的域名\n    domain: dysmsapi.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 短信签名，必须是已经在阿里云短信服务中注册并通过审核的\n    sign-name: XXXX\n', '546d68635943409f39e9e364e3ca5687', '2025-03-27 20:02:30', '2025-04-03 08:32:43', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (59, 'vector-app.yaml', 'DEFAULT_GROUP', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_app?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', 'd9fc311625dc0fef0ebb90d37ef881a9', '2025-04-01 12:13:45', '2025-04-01 12:15:32', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (60, 'vector-third-key.yaml', 'DEFAULT_GROUP', 'oss:\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 访问凭据\n    access-key-id: LTAI5tPBZFGSYozanQdwL8ak\n    # 凭据密钥\n    access-key-secret: eiBUGwAwW5gzahHmUMOfDxayMtFLq1\n\nsms:\n  aliyun:\n    # 访问凭据\n    access-key-id: LTAI5tPBZFGSYozanQdwL8ak\n    # 凭据密钥\n    access-key-secret: eiBUGwAwW5gzahHmUMOfDxayMtFLq1\n', 'bfd9f7f2c9ff69ce27b0ef8d5e7324c4', '2025-04-06 17:21:36', '2025-04-06 17:23:19', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (61, 'biz-product.yaml', 'DEFAULT_GROUP', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_biz_product?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:', '275958b12e2362e7d2cf180f3804db67', '2025-04-11 13:35:57', '2025-04-11 13:58:48', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (63, 'biz-supply.yaml', 'DEFAULT_GROUP', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_biz_supply?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n  rabbitmq:\n    host: ${rabbitmq.host}\n    port: ${rabbitmq.port}\n    virtual-host: /\n    username: ${rabbitmq.username}\n    password: ${rabbitmq.password}\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    listener:\n      simple:\n        acknowledge-mode: manual\n        prefetch: 1 # 每个使用者可以处理的未确认消息的最大数量。\n        retry:\n          enabled: true # 开启消费失败重试\n          max-attempts: 3 # 最大重试次数\n          initial-interval: 1000ms # 第一次和第二次尝试传递消息之间的持续时间\n          multiplier: 1 # 应用于上一次重试间隔的乘数。\n          max-interval: 10000ms # 两次尝试之间的最长持续时间\n          stateless: true # 重试是无状态的还是有状态的。有事务选false\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:', '8c14f68d750cc98fc96c92d47e15415e', '2025-04-11 13:38:18', '2025-04-11 13:58:55', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (66, 'biz-warehouse.yaml', 'DEFAULT_GROUP', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_biz_warehouse?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n  rabbitmq:\n    host: ${rabbitmq.host}\n    port: ${rabbitmq.port}\n    virtual-host: /\n    username: ${rabbitmq.username}\n    password: ${rabbitmq.password}\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    listener:\n      simple:\n        acknowledge-mode: manual\n        prefetch: 1 # 每个使用者可以处理的未确认消息的最大数量。\n        retry:\n          enabled: true # 开启消费失败重试\n          max-attempts: 3 # 最大重试次数\n          initial-interval: 1000ms # 第一次和第二次尝试传递消息之间的持续时间\n          multiplier: 1 # 应用于上一次重试间隔的乘数。\n          max-interval: 10000ms # 两次尝试之间的最长持续时间\n          stateless: true # 重试是无状态的还是有状态的。有事务选false\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:', '89c5ce492266cede2fe42e5a28fbfa69', '2025-04-11 13:41:11', '2025-04-11 13:59:03', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '', '');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint(20) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint(20) UNSIGNED NOT NULL,
  `nid` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 107 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (22, 44, 'application-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/vector?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: root\n    password: root\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n  global-config:\n    db-config:\n      id-type: auto\n\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: ${spring.application.name}-tx-group\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      username: \'nacos\'\n      password: \'nacos\'\n      dataId: \"seata.properties\"\n      group: \'SEATA_GROUP\'\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      group: \'SEATA_GROUP\'\n      username: \'nacos\'\n      password: \'nacos\'', '1c1461da80ce1e4a320dd8ec88724399', '2025-03-24 17:58:48', '2025-03-24 09:58:49', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 45, 'vector-common.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/vector_boot?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: root\n    password: root\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n  global-config:\n    db-config:\n      id-type: auto\n\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: ${spring.application.name}-tx-group\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      username: \'nacos\'\n      password: \'nacos\'\n      dataId: \"seata.properties\"\n      group: \'SEATA_GROUP\'\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      group: \'SEATA_GROUP\'\n      username: \'nacos\'\n      password: \'nacos\'', 'e6cb7031165df5e9ecaabdc62dfa4bfd', '2025-03-26 16:11:23', '2025-03-26 08:11:24', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (36, 46, 'vector-common.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/vector_boot?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: root\n    password: root\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n  global-config:\n    db-config:\n      id-type: auto\n\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: ${spring.application.name}-tx-group\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      username: \'nacos\'\n      password: \'nacos\'\n      dataId: \"seata.properties\"\n      group: \'SEATA_GROUP\'\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      group: \'SEATA_GROUP\'\n      username: \'nacos\'\n      password: \'nacos\'', 'e6cb7031165df5e9ecaabdc62dfa4bfd', '2025-03-26 16:19:07', '2025-03-26 08:19:08', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 47, 'vector-system.yaml', 'DEFAULT_GROUP', '', 'security:\n  whitelist-paths:\n    - /remote/user/**\n    - /remote/user/menus/{id}', '7422ec001701da2c6538b2a5d0d6dd2f', '2025-03-26 16:31:01', '2025-03-26 08:31:02', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (38, 48, 'vector-system.yaml', 'DEFAULT_GROUP', '', 'security:\n  whitelist-paths:\n    - /remote/user/**\n    - /remote/user/menus/{id}', '7422ec001701da2c6538b2a5d0d6dd2f', '2025-03-26 16:45:04', '2025-03-26 08:45:04', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (38, 49, 'vector-system.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:11111\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式 (eg: https://oss.youlai.tech)\n    custom-domain:\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    secret-key: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', '2cbaba31497b8ac1cf1b06cf69ebc822', '2025-03-26 17:30:28', '2025-03-26 09:30:28', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 50, 'vector-auth.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:11111\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式 (eg: https://oss.youlai.tech)\n    custom-domain:\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    secret-key: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', '8282f97c5636c4abc54f6b9b6841186f', '2025-03-26 17:37:27', '2025-03-26 09:37:28', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (41, 51, 'vector-auth.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:11111\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式 (eg: https://oss.youlai.tech)\n    custom-domain:\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    secret-key: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', '8282f97c5636c4abc54f6b9b6841186f', '2025-03-26 17:46:20', '2025-03-26 09:46:21', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (36, 52, 'vector-common.yaml', 'DEFAULT_GROUP', '', 'mysql:\n  host: localhost\n  port: 3306\n  username: root\n  password: root\n\nredis:\n  host: 192.168.0.250\n  port: 6379\n  password: 123456\n\nrabbitmq:\n  host: 192.168.0.250\n  port: 5672\n  username: guest\n  password: guest\n', 'f85a6578f8602b4df2389c03e0f7d421', '2025-03-27 01:06:11', '2025-03-26 17:06:12', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (36, 53, 'vector-common.yaml', 'DEFAULT_GROUP', '', 'mysql:\n  host: localhost\n  port: 3306\n  username: root\n  password: root\n\nredis:\n  host: 192.168.0.250\n  port: 6379\n  password: 123456\n\nrabbitmq:\n  host: 192.168.0.250\n  port: 5672\n  username: guest\n  password: guest\n\n# 验签公钥地址\nspring:\n  security:\n    oauth2:\n      authorizationserver:\n        token-uri: ${gateway.endpoint}/vector-auth/oauth2/token\n      resourceserver:\n        jwt: \n          jwk-set-uri: ${gateway.endpoint}/vector-auth/oauth2/jwks\n\n# 网关地址\ngateway:\n  endpoint: http://localhost:8080', '6e462d1372bfe95a72ab19d74bf79cff', '2025-03-27 01:07:30', '2025-03-26 17:07:31', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (36, 54, 'vector-common.yaml', 'DEFAULT_GROUP', '', 'mysql:\n  host: localhost\n  port: 3306\n  username: root\n  password: root\n\nredis:\n  host: 192.168.0.250\n  port: 6379\n  password: 123456\n\nrabbitmq:\n  host: 192.168.0.250\n  port: 5672\n  username: guest\n  password: guest\n\n# 验签公钥地址\nspring:\n  security:\n    oauth2:\n      # authorizationserver:\n      #   token-uri: ${gateway.endpoint}/vector-auth/oauth2/token\n      resourceserver:\n        jwt: \n          jwk-set-uri: ${gateway.endpoint}/vector-auth/oauth2/jwks\n\n# 网关地址\ngateway:\n  endpoint: http://localhost:8080', '0472f3fbd933b5e761cdf20208638d68', '2025-03-27 01:08:02', '2025-03-26 17:08:02', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (36, 55, 'vector-common.yaml', 'DEFAULT_GROUP', '', 'mysql:\n  host: localhost\n  port: 3306\n  username: root\n  password: root\n\nredis:\n  host: 192.168.0.250\n  port: 6379\n  password: 123456\n\nrabbitmq:\n  host: 192.168.0.250\n  port: 5672\n  username: guest\n  password: guest\n\n# 验签公钥地址\nspring:\n  security:\n    oauth2:\n      # authorizationserver:\n      #   token-uri: ${gateway.endpoint}/vector-auth/oauth2/token\n      # resourceserver:\n      #   jwt: \n      #     jwk-set-uri: ${gateway.endpoint}/vector-auth/oauth2/jwks\n\n# 网关地址\ngateway:\n  endpoint: http://localhost:8080', 'f4f327740a4c8feb9c6763e447e8c28b', '2025-03-27 01:08:47', '2025-03-26 17:08:48', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (36, 56, 'vector-common.yaml', 'DEFAULT_GROUP', '', 'mysql:\n  host: localhost\n  port: 3306\n  username: root\n  password: root\n\nredis:\n  host: 192.168.0.250\n  port: 6379\n  password: 123456\n\nrabbitmq:\n  host: 192.168.0.250\n  port: 5672\n  username: guest\n  password: guest\n\n# 验签公钥地址\nspring:\n  security:\n    oauth2:\n      # authorizationserver:\n      #   token-uri: ${gateway.endpoint}/vector-auth/oauth2/token\n      resourceserver:\n        jwt: \n          jwk-set-uri: ${gateway.endpoint}/vector-auth/oauth2/jwks\n\n# 网关地址\ngateway:\n  endpoint: http://localhost:8080', '0472f3fbd933b5e761cdf20208638d68', '2025-03-27 01:09:17', '2025-03-26 17:09:17', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (36, 57, 'vector-common.yaml', 'DEFAULT_GROUP', '', 'mysql:\n  host: localhost\n  port: 3306\n  username: root\n  password: root\n\nredis:\n  host: 192.168.0.250\n  port: 6379\n  password: 123456\n\nrabbitmq:\n  host: 192.168.0.250\n  port: 5672\n  username: guest\n  password: guest\n\n# 验签公钥地址\nspring:\n  security:\n    oauth2:\n      authorizationserver:\n        token-uri: ${gateway.endpoint}/vector-auth/oauth2/token\n      resourceserver:\n        jwt: \n          jwk-set-uri: ${gateway.endpoint}/vector-auth/oauth2/jwks1\n\n# 网关地址\ngateway:\n  endpoint: http://localhost:8080', '3ec9e558fa233d20214dfcb941c0864b', '2025-03-27 01:10:46', '2025-03-26 17:10:47', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 58, 'vector-gateway', 'DEFAULT_GROUP', '', 'spring:\r\n  data:\r\n    redis:\r\n      host: ${redis.host}\r\n      port: ${redis.port}\r\n      password: ${redis.password}\r\n      database: 1\r\n  cloud:\r\n    gateway:\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n      routes:\r\n        - id: auth_route\r\n          uri: lb://vector-auth\r\n          predicates:\r\n            - Path=/auth/**\r\n          filters:\r\n#            - RewritePath=/auth/(?<segment>.*),/$\\{segment}\r\n            - StripPrefix=1 # 跟上面方式效果一样\r\n\r\n        - id: system_route\r\n          uri: lb://vector-system\r\n          predicates:\r\n            - Path=/sys/**,/gen/**\r\n\r\n        - id: third_route\r\n          uri: lb://vector-third\r\n          predicates:\r\n            - Path=/third/**\r\n          filters:\r\n            - StripPrefix=1\r\n\r\n        - id: info_route\r\n          uri: lb://vector-info\r\n          predicates:\r\n            - Path=/info/**\r\n          filters:\r\n            - StripPrefix=1\r\n\r\n        - id: purchase_route\r\n          uri: lb://vector-purchase\r\n          predicates:\r\n            - Path=/purchase/**\r\n\r\n        - id: warehouse_route\r\n          uri: lb://vector-warehouse\r\n          predicates:\r\n            - Path=/warehouse/**\r\n\r\n        - id: sale_route\r\n          uri: lb://vector-sale\r\n          predicates:\r\n            - Path=/sale/**\r\n', '894f66deb6e5afe8f42b9fe7c5cc0322', '2025-03-27 05:31:07', '2025-03-26 21:31:07', 'nacos', '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (0, 59, 'vector-gateway.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  data:\r\n    redis:\r\n      host: ${redis.host}\r\n      port: ${redis.port}\r\n      password: ${redis.password}\r\n      database: 1\r\n  cloud:\r\n    gateway:\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n      routes:\r\n        - id: auth_route\r\n          uri: lb://vector-auth\r\n          predicates:\r\n            - Path=/auth/**\r\n          filters:\r\n#            - RewritePath=/auth/(?<segment>.*),/$\\{segment}\r\n            - StripPrefix=1 # 跟上面方式效果一样\r\n\r\n        - id: system_route\r\n          uri: lb://vector-system\r\n          predicates:\r\n            - Path=/sys/**,/gen/**\r\n\r\n        - id: third_route\r\n          uri: lb://vector-third\r\n          predicates:\r\n            - Path=/third/**\r\n          filters:\r\n            - StripPrefix=1\r\n\r\n        - id: info_route\r\n          uri: lb://vector-info\r\n          predicates:\r\n            - Path=/info/**\r\n          filters:\r\n            - StripPrefix=1\r\n\r\n        - id: purchase_route\r\n          uri: lb://vector-purchase\r\n          predicates:\r\n            - Path=/purchase/**\r\n\r\n        - id: warehouse_route\r\n          uri: lb://vector-warehouse\r\n          predicates:\r\n            - Path=/warehouse/**\r\n\r\n        - id: sale_route\r\n          uri: lb://vector-sale\r\n          predicates:\r\n            - Path=/sale/**\r\n', '894f66deb6e5afe8f42b9fe7c5cc0322', '2025-03-27 05:33:10', '2025-03-26 21:33:10', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (49, 60, 'vector-gateway', 'DEFAULT_GROUP', '', 'spring:\r\n  data:\r\n    redis:\r\n      host: ${redis.host}\r\n      port: ${redis.port}\r\n      password: ${redis.password}\r\n      database: 1\r\n  cloud:\r\n    gateway:\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n      routes:\r\n        - id: auth_route\r\n          uri: lb://vector-auth\r\n          predicates:\r\n            - Path=/auth/**\r\n          filters:\r\n#            - RewritePath=/auth/(?<segment>.*),/$\\{segment}\r\n            - StripPrefix=1 # 跟上面方式效果一样\r\n\r\n        - id: system_route\r\n          uri: lb://vector-system\r\n          predicates:\r\n            - Path=/sys/**,/gen/**\r\n\r\n        - id: third_route\r\n          uri: lb://vector-third\r\n          predicates:\r\n            - Path=/third/**\r\n          filters:\r\n            - StripPrefix=1\r\n\r\n        - id: info_route\r\n          uri: lb://vector-info\r\n          predicates:\r\n            - Path=/info/**\r\n          filters:\r\n            - StripPrefix=1\r\n\r\n        - id: purchase_route\r\n          uri: lb://vector-purchase\r\n          predicates:\r\n            - Path=/purchase/**\r\n\r\n        - id: warehouse_route\r\n          uri: lb://vector-warehouse\r\n          predicates:\r\n            - Path=/warehouse/**\r\n\r\n        - id: sale_route\r\n          uri: lb://vector-sale\r\n          predicates:\r\n            - Path=/sale/**\r\n', '894f66deb6e5afe8f42b9fe7c5cc0322', '2025-03-27 05:33:15', '2025-03-26 21:33:15', 'nacos', '127.0.0.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (4, 61, 'info-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/vector?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: root\n    password: root\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n#  redis:\n#    host: 192.168.0.250\n#    port: 6379\n#    password: 123456\n#  cache:\n#    type: redis\n#    redis:\n#      cache-null-values: false\n#      time-to-live: 60s\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n  global-config:\n    db-config:\n      id-type: auto\n\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: ${spring.application.name}-tx-group\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      username: \'nacos\'\n      password: \'nacos\'\n      dataId: \"seata.properties\"\n      group: \'SEATA_GROUP\'\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      group: \'SEATA_GROUP\'\n      username: \'nacos\'\n      password: \'nacos\'', '8af23158e7aeb4b4c776732ad8c7e2fb', '2025-03-27 05:52:24', '2025-03-26 21:52:24', NULL, '127.0.0.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (5, 62, 'purchase-service-dev.yaml', 'DEFAULT_GROUP', '', '#', '01abfc750a0c942167651c40d088531d', '2025-03-27 05:52:24', '2025-03-26 21:52:24', NULL, '127.0.0.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (9, 63, 'warehouse-service-dev.yaml', 'DEFAULT_GROUP', '', '#', '01abfc750a0c942167651c40d088531d', '2025-03-27 05:52:24', '2025-03-26 21:52:24', NULL, '127.0.0.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (22, 64, 'application-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/vector_boot?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: root\n    password: root\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n  global-config:\n    db-config:\n      id-type: auto\n\nseata:\n  enabled: true\n  application-id: ${spring.application.name}\n  tx-service-group: ${spring.application.name}-tx-group\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      username: \'nacos\'\n      password: \'nacos\'\n      dataId: \"seata.properties\"\n      group: \'SEATA_GROUP\'\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      group: \'SEATA_GROUP\'\n      username: \'nacos\'\n      password: \'nacos\'', 'e6cb7031165df5e9ecaabdc62dfa4bfd', '2025-03-27 05:52:24', '2025-03-26 21:52:24', NULL, '127.0.0.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (31, 65, 'system-service-dev.yaml', 'DEFAULT_GROUP', '', 'security:\n  whitelist-paths:\n    - /remote/user/**\n    - /remote/user/menus/{id}', '7422ec001701da2c6538b2a5d0d6dd2f', '2025-03-27 05:52:24', '2025-03-26 21:52:24', NULL, '127.0.0.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (32, 66, 'common-redis-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  data:\n    redis:\n      host: 192.168.0.250\n      port: 6379\n      password: 123456\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n#  cache:\n#    type: redis\n#    redis:\n#      cache-null-values: false\n#      time-to-live: 60s\n', 'a4296e902a901c42bedba0b13c25f6ae', '2025-03-27 05:52:24', '2025-03-26 21:52:24', NULL, '127.0.0.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (34, 67, 'common-mq-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  rabbitmq:\n    host: 192.168.0.250\n    port: 5672\n    virtual-host: /\n    username: guest\n    password: guest\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    listener:\n      simple:\n        acknowledge-mode: manual\n        prefetch: 1 # 每个使用者可以处理的未确认消息的最大数量。\n        retry:\n          enabled: true # 开启消费失败重试\n          max-attempts: 3 # 最大重试次数\n          initial-interval: 1000ms # 第一次和第二次尝试传递消息之间的持续时间\n          multiplier: 1 # 应用于上一次重试间隔的乘数。\n          max-interval: 10000ms # 两次尝试之间的最长持续时间\n          stateless: true # 重试是无状态的还是有状态的。有事务选false', '791fe0e215e3def753b1e4ebf3491b98', '2025-03-27 05:52:24', '2025-03-26 21:52:24', NULL, '127.0.0.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (38, 68, 'vector-system.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:11111\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式 (eg: https://oss.youlai.tech)\n    custom-domain:\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    secret-key: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', '8282f97c5636c4abc54f6b9b6841186f', '2025-03-27 05:57:13', '2025-03-26 21:57:13', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (38, 69, 'vector-system.yaml', 'DEFAULT_GROUP', '', 'spring:\n  # jackson:\n  #   time-zone: GMT+8\n  #   date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:11111\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式 (eg: https://oss.youlai.tech)\n    custom-domain:\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    secret-key: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', '8abe5c8e2ace0a3c921a27638868116b', '2025-03-27 06:00:13', '2025-03-26 22:00:13', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (38, 70, 'vector-system.yaml', 'DEFAULT_GROUP', '', 'spring:\n  # jackson:\n  #   time-zone: GMT+8\n  #   date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:11111\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式 (eg: https://oss.youlai.tech)\n    custom-domain:\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    secret-key: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', '202d721533c8fc47c4161d537a6076d5', '2025-03-27 06:01:26', '2025-03-26 22:01:27', 'nacos', '127.0.0.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 71, 'vector-third.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:11111\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式 (eg: https://oss.youlai.tech)\n    custom-domain:\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    secret-key: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', '5a8a501811a3e86bc892757310fdd548', '2025-03-28 03:59:14', '2025-03-27 19:59:15', NULL, '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (55, 72, 'vector-third.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:11111\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式 (eg: https://oss.youlai.tech)\n    custom-domain:\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    secret-key: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', '5a8a501811a3e86bc892757310fdd548', '2025-03-28 04:00:10', '2025-03-27 20:00:10', 'nacos', '127.0.0.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (0, 73, 'vector-third.yaml', 'DEFAULT_GROUP', '', 'oss:\r\n  # OSS 类型 (目前支持aliyun、minio)\r\n  type: aliyun\r\n  # 阿里云OSS对象存储服务\r\n  aliyun:\r\n    # 服务Endpoint\r\n    endpoint: oss-cn-shenzhen.aliyuncs.com\r\n    # 访问凭据\r\n    access-key: LTAI5t7ChBvJhp1tjiCK38s6\r\n    # 凭据密钥\r\n    secret-key: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\r\n    # 存储桶名称\r\n    bucket-name: wengxs\r\n  # MinIO 对象存储服务\r\n  minio:\r\n    # 服务Endpoint\r\n    endpoint: http://localhost:18300\r\n    # 访问凭据\r\n    access-key: minioadmin\r\n    # 凭据密钥\r\n    secret-key: minioadmin\r\n    # 存储桶名称\r\n    bucket-name: default\r\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式\r\n    custom-domain:\r\n', 'a2d2117216fe9314da871c5f2abc252a', '2025-03-28 04:02:30', '2025-03-27 20:02:30', 'nacos', '127.0.0.1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (50, 74, 'vector-gateway.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  data:\r\n    redis:\r\n      host: ${redis.host}\r\n      port: ${redis.port}\r\n      password: ${redis.password}\r\n      database: 1\r\n  cloud:\r\n    gateway:\r\n      discovery:\r\n        locator:\r\n          enabled: true\r\n      routes:\r\n        - id: auth_route\r\n          uri: lb://vector-auth\r\n          predicates:\r\n            - Path=/auth/**\r\n          filters:\r\n#            - RewritePath=/auth/(?<segment>.*),/$\\{segment}\r\n            - StripPrefix=1 # 跟上面方式效果一样\r\n\r\n        - id: system_route\r\n          uri: lb://vector-system\r\n          predicates:\r\n            - Path=/sys/**,/gen/**\r\n\r\n        - id: third_route\r\n          uri: lb://vector-third\r\n          predicates:\r\n            - Path=/third/**\r\n          filters:\r\n            - StripPrefix=1\r\n\r\n        - id: info_route\r\n          uri: lb://vector-info\r\n          predicates:\r\n            - Path=/info/**\r\n          filters:\r\n            - StripPrefix=1\r\n\r\n        - id: purchase_route\r\n          uri: lb://vector-purchase\r\n          predicates:\r\n            - Path=/purchase/**\r\n\r\n        - id: warehouse_route\r\n          uri: lb://vector-warehouse\r\n          predicates:\r\n            - Path=/warehouse/**\r\n\r\n        - id: sale_route\r\n          uri: lb://vector-sale\r\n          predicates:\r\n            - Path=/sale/**\r\n', '894f66deb6e5afe8f42b9fe7c5cc0322', '2025-04-01 20:06:18', '2025-04-01 12:06:18', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (38, 75, 'vector-system.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:11111\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式 (eg: https://oss.youlai.tech)\n    custom-domain:\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    secret-key: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', '5a8a501811a3e86bc892757310fdd548', '2025-04-01 20:12:17', '2025-04-01 12:12:18', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 76, 'vector-app.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', 'a9ddbab9e69f05d1484922cad0c62258', '2025-04-01 20:13:44', '2025-04-01 12:13:45', NULL, '0:0:0:0:0:0:0:1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (59, 77, 'vector-app.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', 'a9ddbab9e69f05d1484922cad0c62258', '2025-04-01 20:14:23', '2025-04-01 12:14:24', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (59, 78, 'vector-app.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_app?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /1remote/user/**', 'a79b2be4516733b7705898f7e5d4f82f', '2025-04-01 20:15:31', '2025-04-01 12:15:32', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (56, 79, 'vector-third.yaml', 'DEFAULT_GROUP', '', 'oss:\r\n  # OSS 类型 (目前支持aliyun、minio)\r\n  type: aliyun\r\n  # 阿里云OSS对象存储服务\r\n  aliyun:\r\n    # 服务Endpoint\r\n    endpoint: oss-cn-shenzhen.aliyuncs.com\r\n    # 访问凭据\r\n    access-key: LTAI5t7ChBvJhp1tjiCK38s6\r\n    # 凭据密钥\r\n    secret-key: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\r\n    # 存储桶名称\r\n    bucket-name: wengxs\r\n  # MinIO 对象存储服务\r\n  minio:\r\n    # 服务Endpoint\r\n    endpoint: http://localhost:18300\r\n    # 访问凭据\r\n    access-key: minioadmin\r\n    # 凭据密钥\r\n    secret-key: minioadmin\r\n    # 存储桶名称\r\n    bucket-name: default\r\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式\r\n    custom-domain:\r\n', 'a2d2117216fe9314da871c5f2abc252a', '2025-04-01 22:03:55', '2025-04-01 14:03:55', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (36, 80, 'vector-common.yaml', 'DEFAULT_GROUP', '', 'mysql:\n  host: localhost\n  port: 3306\n  username: root\n  password: root\n\nredis:\n  host: 192.168.0.250\n  port: 6379\n  password: 123456\n\nrabbitmq:\n  host: 192.168.0.250\n  port: 5672\n  username: guest\n  password: guest\n\n# 验签公钥地址\nspring:\n  security:\n    oauth2:\n      authorizationserver:\n        token-uri: ${gateway.endpoint}/vector-auth/oauth2/token\n      resourceserver:\n        jwt: \n          jwk-set-uri: ${gateway.endpoint}/vector-auth/oauth2/jwks\n\n# 网关地址\ngateway:\n  endpoint: http://localhost:8080', '6e462d1372bfe95a72ab19d74bf79cff', '2025-04-02 01:23:54', '2025-04-01 17:23:54', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (36, 81, 'vector-common.yaml', 'DEFAULT_GROUP', '', 'mysql:\n  host: localhost\n  port: 3306\n  username: root\n  password: root\n\nredis:\n  host: 192.168.0.250\n  port: 6379\n  password: 123456\n\nrabbitmq:\n  host: 192.168.0.250\n  port: 5672\n  username: guest\n  password: guest\n\n# 验签公钥地址\nspring:\n  security:\n    oauth2:\n      authorizationserver:\n        token-uri: ${gateway.endpoint}/vector-auth/oauth2/token\n      resourceserver:\n        jwt: \n          jwk-set-uri: ${gateway.endpoint}/vector-auth/oauth2/jwks\n\n# 网关地址\ngateway:\n  endpoint: http://localhost:8080\n\n# 短信模版代码\nsms:\n  aliyun:\n    templateCode:\n      login: SMS_12345678', '2ad8568ed6d5354cb06e0dd8f890a350', '2025-04-02 01:27:37', '2025-04-01 17:27:37', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (56, 82, 'vector-third.yaml', 'DEFAULT_GROUP', '', 'oss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:18300\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式\n    custom-domain:\n\nsms:\n  # 短信类型 (目前支持aliyun)\n  type: aliyun\n  # 阿里云短信服务\n  aliyun:\n    # 阿里云服务的区域ID\n    region-id: cn-hangzhou\n    # 阿里云短信服务API的域名\n    domain: dysmsapi.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 短信签名，必须是已经在阿里云短信服务中注册并通过审核的\n    sign-name: XXXX\n', 'e5016b717a1ac112344fe27f04fcd0bc', '2025-04-02 02:35:22', '2025-04-01 18:35:22', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (50, 83, 'vector-gateway.yaml', 'DEFAULT_GROUP', '', 'spring:\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          enabled: true\n      routes:\n        - id: auth_route\n          uri: lb://vector-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n#            - RewritePath=/auth/(?<segment>.*),/$\\{segment}\n            - StripPrefix=1 # 跟上面方式效果一样\n\n        - id: system_route\n          uri: lb://vector-system\n          predicates:\n            - Path=/sys/**,/gen/**\n\n        - id: third_route\n          uri: lb://vector-third\n          predicates:\n            - Path=/third/**\n          filters:\n            - StripPrefix=1\n\n        - id: app_route\n          uri: lb://vector-app\n          predicates:\n            - Path=/app/**\n          filters:\n            - StripPrefix=1\n\n        - id: purchase_route\n          uri: lb://vector-purchase\n          predicates:\n            - Path=/purchase/**\n\n        - id: warehouse_route\n          uri: lb://vector-warehouse\n          predicates:\n            - Path=/warehouse/**\n\n        - id: sale_route\n          uri: lb://vector-sale\n          predicates:\n            - Path=/sale/**\n', '21ec0c306fba878d99c4efbb55371a10', '2025-04-02 02:47:47', '2025-04-01 18:47:48', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (50, 84, 'vector-gateway.yaml', 'DEFAULT_GROUP', '', 'spring:\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          enabled: true\n      routes:\n        - id: auth_route\n          uri: lb://vector-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n#            - RewritePath=/auth/(?<segment>.*),/$\\{segment}\n            - StripPrefix=1 # 跟上面方式效果一样\n\n        - id: system_route\n          uri: lb://vector-system\n          predicates:\n            - Path=/sys/**,/gen/**\n\n        - id: third_route\n          uri: lb://vector-third\n          predicates:\n            - Path=/third/**\n          filters:\n            # - StripPrefix=1\n\n        - id: app_route\n          uri: lb://vector-app\n          predicates:\n            - Path=/app/**\n          filters:\n            - StripPrefix=1\n\n        - id: purchase_route\n          uri: lb://vector-purchase\n          predicates:\n            - Path=/purchase/**\n\n        - id: warehouse_route\n          uri: lb://vector-warehouse\n          predicates:\n            - Path=/warehouse/**\n\n        - id: sale_route\n          uri: lb://vector-sale\n          predicates:\n            - Path=/sale/**\n', 'a5795e5df43da8bcf98dd329f07dd7fb', '2025-04-02 02:48:11', '2025-04-01 18:48:12', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (56, 85, 'vector-third.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:18300\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式\n    custom-domain:\n\nsms:\n  # 短信类型 (目前支持aliyun)\n  type: aliyun\n  # 阿里云短信服务\n  aliyun:\n    # 阿里云服务的区域ID\n    region-id: cn-hangzhou\n    # 阿里云短信服务API的域名\n    domain: dysmsapi.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 短信签名，必须是已经在阿里云短信服务中注册并通过审核的\n    sign-name: XXXX\n', '4c89521855147527a84cb302d8a28f0c', '2025-04-02 03:07:24', '2025-04-01 19:07:25', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (56, 86, 'vector-third.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:18300\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式\n    custom-domain:\n\nsms:\n  # 短信类型 (目前支持aliyun)\n  type: aliyun\n  # 阿里云短信服务\n  aliyun:\n    # 阿里云服务的区域ID\n    region-id: cn-hangzhou\n    # 阿里云短信服务API的域名\n    domain: dysmsapi.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 短信签名，必须是已经在阿里云短信服务中注册并通过审核的\n    sign-name: XXXX\n\nsecurity:\n  whitelist-paths:\n    - /remote/third/sms/send', 'fc5c187f3855e412ec9df6ac951fd469', '2025-04-02 03:07:42', '2025-04-01 19:07:43', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (56, 87, 'vector-third.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:18300\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式\n    custom-domain:\n\nsms:\n  # 短信类型 (目前支持aliyun)\n  type: aliyun\n  # 阿里云短信服务\n  aliyun:\n    # 阿里云服务的区域ID\n    region-id: cn-hangzhou\n    # 阿里云短信服务API的域名\n    domain: dysmsapi.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 短信签名，必须是已经在阿里云短信服务中注册并通过审核的\n    sign-name: XXXX\n\nsecurity:\n  whitelist-paths:\n    - /remote/third/sms/send', 'fc5c187f3855e412ec9df6ac951fd469', '2025-04-02 03:08:51', '2025-04-01 19:08:51', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (50, 88, 'vector-gateway.yaml', 'DEFAULT_GROUP', '', 'spring:\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          enabled: true\n      routes:\n        - id: auth_route\n          uri: lb://vector-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n#            - RewritePath=/auth/(?<segment>.*),/$\\{segment}\n            - StripPrefix=1 # 跟上面方式效果一样\n\n        - id: system_route\n          uri: lb://vector-system\n          predicates:\n            - Path=/sys/**,/gen/**\n\n        - id: third_route\n          uri: lb://vector-third\n          predicates:\n            - Path=/third/**\n\n        - id: app_route\n          uri: lb://vector-app\n          predicates:\n            - Path=/app/**\n\n        - id: purchase_route\n          uri: lb://vector-purchase\n          predicates:\n            - Path=/purchase/**\n\n        - id: warehouse_route\n          uri: lb://vector-warehouse\n          predicates:\n            - Path=/warehouse/**\n\n        - id: sale_route\n          uri: lb://vector-sale\n          predicates:\n            - Path=/sale/**\n', 'a5fe0e35191fba4b0bb226ec2e7d4f78', '2025-04-02 03:54:06', '2025-04-01 19:54:07', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (56, 89, 'vector-third.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/third/sms/send\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:18300\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式\n    custom-domain:\n\nsms:\n  # 短信类型 (目前支持aliyun)\n  type: aliyun\n  # 阿里云短信服务\n  aliyun:\n    # 阿里云服务的区域ID\n    region-id: cn-hangzhou\n    # 阿里云短信服务API的域名\n    domain: dysmsapi.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 短信签名，必须是已经在阿里云短信服务中注册并通过审核的\n    sign-name: XXXX\n', 'acd4db722fc421f92c30c002e2f79e7a', '2025-04-03 16:32:42', '2025-04-03 08:32:43', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (38, 90, 'vector-system.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_boot?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', 'a9ddbab9e69f05d1484922cad0c62258', '2025-04-03 16:33:06', '2025-04-03 08:33:06', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (50, 91, 'vector-gateway.yaml', 'DEFAULT_GROUP', '', 'spring:\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          enabled: true\n      routes:\n        - id: auth_route\n          uri: lb://vector-auth\n          predicates:\n            - Path=/auth/**,/oauth2/**\n          filters:\n#            - RewritePath=/auth/(?<segment>.*),/$\\{segment}\n            # - StripPrefix=1 # 跟上面方式效果一样\n\n        - id: system_route\n          uri: lb://vector-system\n          predicates:\n            - Path=/sys/**,/gen/**\n\n        - id: third_route\n          uri: lb://vector-third\n          predicates:\n            - Path=/third/**\n\n        - id: app_route\n          uri: lb://vector-app\n          predicates:\n            - Path=/app/**\n\n        - id: purchase_route\n          uri: lb://vector-purchase\n          predicates:\n            - Path=/purchase/**\n\n        - id: warehouse_route\n          uri: lb://vector-warehouse\n          predicates:\n            - Path=/warehouse/**\n\n        - id: sale_route\n          uri: lb://vector-sale\n          predicates:\n            - Path=/sale/**\n', '422f6797d23b4b6acc90a4bc373e950f', '2025-04-03 16:55:13', '2025-04-03 08:55:14', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (50, 92, 'vector-gateway.yaml', 'DEFAULT_GROUP', '', 'spring:\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          enabled: true\n      routes:\n        - id: auth_route\n          uri: lb://vector-auth\n          predicates:\n            - Path=/auth/**,/oauth2/**\n          filters:\n#            - RewritePath=/auth/(?<segment>.*),/$\\{segment}\n            # - StripPrefix=1 # 跟上面方式效果一样\n\n        - id: system_route\n          uri: lb://vector-system\n          predicates:\n            - Path=/sys/**,/gen/**\n\n        - id: third_route\n          uri: lb://vector-third\n          predicates:\n            - Path=/third/**\n\n        - id: app_route\n          uri: lb://vector-app\n          predicates:\n            - Path=/app/**\n\n        - id: purchase_route\n          uri: lb://vector-purchase\n          predicates:\n            - Path=/purchase/**\n\n        - id: warehouse_route\n          uri: lb://vector-warehouse\n          predicates:\n            - Path=/warehouse/**\n\n        - id: gen_route\n          uri: lb://vector-code-generation\n          predicates:\n            - Path=/gen/**\n', '03276909e03cee0d4f9c94f4070a9bc3', '2025-04-03 17:16:09', '2025-04-03 09:16:09', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (50, 93, 'vector-gateway.yaml', 'DEFAULT_GROUP', '', 'spring:\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          enabled: true\n      routes:\n        - id: auth_route\n          uri: lb://vector-auth\n          predicates:\n            - Path=/auth/**,/oauth2/**\n          filters:\n#            - RewritePath=/auth/(?<segment>.*),/$\\{segment}\n            # - StripPrefix=1 # 跟上面方式效果一样\n\n        - id: system_route\n          uri: lb://vector-system\n          predicates:\n            - Path=/sys/**,/gen/**\n\n        - id: third_route\n          uri: lb://vector-third\n          predicates:\n            - Path=/third/**\n\n        - id: app_route\n          uri: lb://vector-app\n          predicates:\n            - Path=/app/**\n\n        - id: gen_route\n          uri: lb://vector-code-generation\n          predicates:\n            - Path=/gen/**\n\n        - id: purchase_route\n          uri: lb://vector-purchase\n          predicates:\n            - Path=/purchase/**\n\n        - id: warehouse_route\n          uri: lb://vector-warehouse\n          predicates:\n            - Path=/warehouse/**\n\n\n', '5f1d4173d2872e3446b70b704c733d45', '2025-04-03 17:20:21', '2025-04-03 09:20:22', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 94, 'vector-third-key.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_third?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/third/sms/send\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:18300\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式\n    custom-domain:\n\nsms:\n  # 短信类型 (目前支持aliyun)\n  type: aliyun\n  # 阿里云短信服务\n  aliyun:\n    # 阿里云服务的区域ID\n    region-id: cn-hangzhou\n    # 阿里云短信服务API的域名\n    domain: dysmsapi.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 短信签名，必须是已经在阿里云短信服务中注册并通过审核的\n    sign-name: XXXX\n', '546d68635943409f39e9e364e3ca5687', '2025-04-07 01:21:36', '2025-04-06 17:21:36', NULL, '0:0:0:0:0:0:0:1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (60, 95, 'vector-third-key.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_third?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/third/sms/send\n\noss:\n  # OSS 类型 (目前支持aliyun、minio)\n  type: aliyun\n  # 阿里云OSS对象存储服务\n  aliyun:\n    # 服务Endpoint\n    endpoint: oss-cn-shenzhen.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 存储桶名称\n    bucket-name: wengxs\n  # MinIO 对象存储服务\n  minio:\n    # 服务Endpoint\n    endpoint: http://localhost:18300\n    # 访问凭据\n    access-key: minioadmin\n    # 凭据密钥\n    secret-key: minioadmin\n    # 存储桶名称\n    bucket-name: default\n    # (可选)自定义域名，如果配置了域名，生成的文件URL是域名格式，未配置则URL则是IP格式\n    custom-domain:\n\nsms:\n  # 短信类型 (目前支持aliyun)\n  type: aliyun\n  # 阿里云短信服务\n  aliyun:\n    # 阿里云服务的区域ID\n    region-id: cn-hangzhou\n    # 阿里云短信服务API的域名\n    domain: dysmsapi.aliyuncs.com\n    # 访问凭据\n    access-key-id: LTAI5t7ChBvJhp1tjiCK38s6\n    # 凭据密钥\n    access-key-secret: ONseP2jZxQ1K1JY3juJFyu4yWd61Nw\n    # 短信签名，必须是已经在阿里云短信服务中注册并通过审核的\n    sign-name: XXXX\n', '546d68635943409f39e9e364e3ca5687', '2025-04-07 01:23:19', '2025-04-06 17:23:19', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 96, 'biz-product.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_system?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', 'a17663bf4c27fc933c138563bc77631a', '2025-04-11 21:35:56', '2025-04-11 13:35:57', NULL, '0:0:0:0:0:0:0:1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (61, 97, 'biz-product.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_system?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:\n    - /remote/user/**', 'a17663bf4c27fc933c138563bc77631a', '2025-04-11 21:37:53', '2025-04-11 13:37:53', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 98, 'biz-supply.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_product?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:', '16231a95d023828366ef2794f3a0fb13', '2025-04-11 21:38:17', '2025-04-11 13:38:18', NULL, '0:0:0:0:0:0:0:1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (63, 99, 'biz-supply.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_product?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:', '16231a95d023828366ef2794f3a0fb13', '2025-04-11 21:40:37', '2025-04-11 13:40:38', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (63, 100, 'biz-supply.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_product?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n  rabbitmq:\n    host: ${rabbitmq.host}\n    port: ${rabbitmq.port}\n    virtual-host: /\n    username: ${rabbitmq.username}\n    password: ${rabbitmq.password}\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    listener:\n      simple:\n        acknowledge-mode: manual\n        prefetch: 1 # 每个使用者可以处理的未确认消息的最大数量。\n        retry:\n          enabled: true # 开启消费失败重试\n          max-attempts: 3 # 最大重试次数\n          initial-interval: 1000ms # 第一次和第二次尝试传递消息之间的持续时间\n          multiplier: 1 # 应用于上一次重试间隔的乘数。\n          max-interval: 10000ms # 两次尝试之间的最长持续时间\n          stateless: true # 重试是无状态的还是有状态的。有事务选false\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:', 'd955f88b3a9561ec1c44757d9b8946a7', '2025-04-11 21:40:58', '2025-04-11 13:40:59', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (0, 101, 'biz-warehouse.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_supply?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n  rabbitmq:\n    host: ${rabbitmq.host}\n    port: ${rabbitmq.port}\n    virtual-host: /\n    username: ${rabbitmq.username}\n    password: ${rabbitmq.password}\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    listener:\n      simple:\n        acknowledge-mode: manual\n        prefetch: 1 # 每个使用者可以处理的未确认消息的最大数量。\n        retry:\n          enabled: true # 开启消费失败重试\n          max-attempts: 3 # 最大重试次数\n          initial-interval: 1000ms # 第一次和第二次尝试传递消息之间的持续时间\n          multiplier: 1 # 应用于上一次重试间隔的乘数。\n          max-interval: 10000ms # 两次尝试之间的最长持续时间\n          stateless: true # 重试是无状态的还是有状态的。有事务选false\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:', '42f8a7f2bcf4de18909149c53ca15f1b', '2025-04-11 21:41:11', '2025-04-11 13:41:11', NULL, '0:0:0:0:0:0:0:1', 'I', '', '');
INSERT INTO `his_config_info` VALUES (66, 102, 'biz-warehouse.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_supply?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n  rabbitmq:\n    host: ${rabbitmq.host}\n    port: ${rabbitmq.port}\n    virtual-host: /\n    username: ${rabbitmq.username}\n    password: ${rabbitmq.password}\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    listener:\n      simple:\n        acknowledge-mode: manual\n        prefetch: 1 # 每个使用者可以处理的未确认消息的最大数量。\n        retry:\n          enabled: true # 开启消费失败重试\n          max-attempts: 3 # 最大重试次数\n          initial-interval: 1000ms # 第一次和第二次尝试传递消息之间的持续时间\n          multiplier: 1 # 应用于上一次重试间隔的乘数。\n          max-interval: 10000ms # 两次尝试之间的最长持续时间\n          stateless: true # 重试是无状态的还是有状态的。有事务选false\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:', '42f8a7f2bcf4de18909149c53ca15f1b', '2025-04-11 21:41:27', '2025-04-11 13:41:28', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (50, 103, 'vector-gateway.yaml', 'DEFAULT_GROUP', '', 'spring:\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          enabled: true\n      routes:\n        - id: auth_route\n          uri: lb://vector-auth\n          predicates:\n            - Path=/auth/**,/oauth2/**\n          filters:\n#            - RewritePath=/auth/(?<segment>.*),/$\\{segment}\n            # - StripPrefix=1 # 跟上面方式效果一样\n\n        - id: system_route\n          uri: lb://vector-system\n          predicates:\n            - Path=/sys/**\n\n        - id: third_route\n          uri: lb://vector-third\n          predicates:\n            - Path=/third/**\n\n        - id: app_route\n          uri: lb://vector-app\n          predicates:\n            - Path=/app/**\n\n        - id: gen_route\n          uri: lb://vector-code-generation\n          predicates:\n            - Path=/gen/**\n\n        - id: purchase_route\n          uri: lb://vector-purchase\n          predicates:\n            - Path=/purchase/**\n\n        - id: warehouse_route\n          uri: lb://vector-warehouse\n          predicates:\n            - Path=/warehouse/**\n\n\n', '0a8838b5412c44e3fdb359f0b5e0a4d4', '2025-04-11 21:51:27', '2025-04-11 13:51:27', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (61, 104, 'biz-product.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_product?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:', '16231a95d023828366ef2794f3a0fb13', '2025-04-11 21:58:47', '2025-04-11 13:58:48', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (63, 105, 'biz-supply.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_supply?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n  rabbitmq:\n    host: ${rabbitmq.host}\n    port: ${rabbitmq.port}\n    virtual-host: /\n    username: ${rabbitmq.username}\n    password: ${rabbitmq.password}\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    listener:\n      simple:\n        acknowledge-mode: manual\n        prefetch: 1 # 每个使用者可以处理的未确认消息的最大数量。\n        retry:\n          enabled: true # 开启消费失败重试\n          max-attempts: 3 # 最大重试次数\n          initial-interval: 1000ms # 第一次和第二次尝试传递消息之间的持续时间\n          multiplier: 1 # 应用于上一次重试间隔的乘数。\n          max-interval: 10000ms # 两次尝试之间的最长持续时间\n          stateless: true # 重试是无状态的还是有状态的。有事务选false\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:', '42f8a7f2bcf4de18909149c53ca15f1b', '2025-04-11 21:58:55', '2025-04-11 13:58:55', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (66, 106, 'biz-warehouse.yaml', 'DEFAULT_GROUP', '', 'spring:\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  cloud:\n    sentinel:\n      transport:\n        port: 8719\n        dashboard: localhost:8080\n    openfeign:\n      circuitbreaker:\n        enabled: true\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${mysql.host}:${mysql.port}/vector_warehouse?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true\n    username: ${mysql.username}\n    password: ${mysql.password}\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      initial-size: 5\n      min-idle: 5\n      max-active: 20\n  data:\n    redis:\n      host: ${redis.host}\n      port: ${redis.port}\n      password: ${redis.password}\n      database: 1\n      # 读超时\n      timeout: 3000\n      # 连接超时\n      connectTimeout: 5000\n      # Lettuce连接池\n      lettuce:\n        pool:\n          # 最小空闲连接\n          min-idle: 5\n          # 最大空闲连接\n          max-idle: 10\n          # 最大连接数\n          max-active: 100\n          # 连接分配应该阻塞的最大时间\n          max-wait: 2000\n  rabbitmq:\n    host: ${rabbitmq.host}\n    port: ${rabbitmq.port}\n    virtual-host: /\n    username: ${rabbitmq.username}\n    password: ${rabbitmq.password}\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    listener:\n      simple:\n        acknowledge-mode: manual\n        prefetch: 1 # 每个使用者可以处理的未确认消息的最大数量。\n        retry:\n          enabled: true # 开启消费失败重试\n          max-attempts: 3 # 最大重试次数\n          initial-interval: 1000ms # 第一次和第二次尝试传递消息之间的持续时间\n          multiplier: 1 # 应用于上一次重试间隔的乘数。\n          max-interval: 10000ms # 两次尝试之间的最长持续时间\n          stateless: true # 重试是无状态的还是有状态的。有事务选false\n\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/**/*.xml\n  type-aliases-package: com.vector.*.entity\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: true\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    db-config:\n      id-type: auto\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\nlogging:\n  pattern:\n    console: \"%d [%thread] %-5level %logger - %msg%n\"\n  level:\n    com.vector: debug\n\nsecurity:\n  whitelist-paths:', '7842a6bcdc65b064cf3d5973069211ca', '2025-04-11 21:59:03', '2025-04-11 13:59:03', 'nacos', '0:0:0:0:0:0:0:1', 'U', '', '');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `resource` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role`, `resource`, `action`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of permissions
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `idx_user_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(20) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(20) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
